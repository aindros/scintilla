# Make file for Scintilla on FreeBSD
#
# @file makefile
#
# Copyright 1998-2010 by Neil Hodgson <neilh@scintilla.org>
# Copyright 2020 by Alessandro Iezzi <info@alessandroiezzi.it>
#
# The License.txt file describes the conditions under which this software may be distributed.
#
# This file is still in porting phase.

.SUFFIXES: .cxx .c .o .h .a .list

SRCDIR  ?= .
BASEDIR  = $(SRCDIR)/..

COMPLIB  = $(BASEDIR)/bin/scintilla.a

# Workaround to compile sources in $(BASEDIR)/lexers and put objects in this directory
LEX_SOURCES != find $(BASEDIR)/lexers -name Lex*.cxx -type f
LEX_OBJS    != echo ${LEX_SOURCES:.cxx=.o} | sed "s~$(BASEDIR)/lexers/~~g"

# Compilers
.ifdef GNU
  CXX = g++
  CC  = gcc
.else
  CXX = clang++
  CC  = clang
.endif

# GTK versions
.ifdef GTK2
  GTK_VERSION = gtk+-2.0
.else
  GTK_VERSION = gtk+-3.0
.endif

# Can choose aspect to sanitize: address and undefined can simply change SANITIZE but for
# thread also need to create Position Independent Executable -> search online documentation
SANITIZE = address
#SANITIZE = undefined

# Warnings ---------------------------------------------------------------------
WARNINGS   = -Wpedantic -Wall -Wno-deprecated-register

# Includes ---------------------------------------------------------------------
INCLUDES = -I $(BASEDIR)/include -I $(BASEDIR)/src -I $(BASEDIR)/lexlib

# Defines ----------------------------------------------------------------------
DEFINES = -DGTK -DSCI_LEXER
.ifdef DEBUG
  DEFINES += -DDEBUG
.else
  DEFINES += -DNDEBUG
.endif

# Flags ------------------------------------------------------------------------
BASE_FLAGS    = -fsanitize=$(SANITIZE) $(WARNINGS)
.ifdef DEBUG
  BASE_FLAGS += -g
.else
  BASE_FLAGS += -Os
.endif

CONFIG_FLAGS != pkg-config --cflags $(GTK_VERSION)

CXX_BASE_FLAGS = --std=c++17 $(BASE_FLAGS)
CXX_ALL_FLAGS  = $(DEFINES) $(INCLUDES) $(CXX_BASE_FLAGS) $(CONFIG_FLAGS)



ARFLAGS = rc
RANLIB ?= ranlib

# Take care of changing Unix style '/' directory separator to '\' on Windows
normalize = $(if $(windir),$(subst /,\,$1),$1)

PYTHON = $(if $(windir),pyw,python3)

#vpath %.h $(SRCDIR) $(BASEDIR)/src $(BASEDIR)/include $(BASEDIR)/lexlib
#vpath %.c $(SRCDIR)
#vpath %.cxx $(SRCDIR) $(BASEDIR)/src $(BASEDIR)/lexlib $(BASEDIR)/lexers

MARSHALLER=scintilla-marshal.o

all: $(COMPLIB)

clean:
	rm -f *.o
	rm -f *.plist
	rm -f $(COMPLIB)

.cxx.o:
	$(CXX) $(CXX_ALL_FLAGS) $(CXXFLAGS) -c ${.IMPSRC}

.c.o: ${.IMPSRC}
	$(CC) $(DEFINES) $(INCLUDES) $(CONFIG_FLAGS) $(BASE_FLAGS) $(CFLAGS) -w -c ${.IMPSRC}

GLIB_GENMARSHAL = glib-genmarshal
GLIB_GENMARSHAL_FLAGS = --prefix=scintilla_marshal

%.h: %.list
	$(GLIB_GENMARSHAL) --header $(GLIB_GENMARSHAL_FLAGS) $< > $@
%.c: %.list
	$(GLIB_GENMARSHAL) --body $(GLIB_GENMARSHAL_FLAGS) $< > $@

analyze:
	clang --analyze $(DEFINES) $(INCLUDES) $(CONFIG_FLAGS) $(CXX_BASE_FLAGS) $(CXXFLAGS) $(SRCDIR)/*.cxx $(BASEDIR)/src/*.cxx $(BASEDIR)/lexlib/*.cxx $(BASEDIR)/lexers/*.cxx

depend deps.mak:
	$(PYTHON) DepGen.py

# Required for base Scintilla
SRC_OBJS = \
	AutoComplete.o \
	CallTip.o \
	CaseConvert.o \
	CaseFolder.o \
	CellBuffer.o \
	CharacterCategory.o \
	CharacterSet.o \
	CharClassify.o \
	ContractionState.o \
	DBCS.o \
	Decoration.o \
	Document.o \
	EditModel.o \
	Editor.o \
	EditView.o \
	Indicator.o \
	KeyMap.o \
	LineMarker.o \
	MarginView.o \
	PerLine.o \
	PositionCache.o \
	RESearch.o \
	RunStyles.o \
	Selection.o \
	Style.o \
	UniConversion.o \
	UniqueString.o \
	ViewStyle.o \
	XPM.o

# Required by lexers
LEXLIB_OBJS = \
	Accessor.o \
	Catalogue.o \
	DefaultLexer.o \
	ExternalLexer.o \
	LexerBase.o \
	LexerModule.o \
	LexerSimple.o \
	PropSetSimple.o \
	StyleContext.o \
	WordList.o

GTK_OBJS = \
	ScintillaBase.o \
	PlatGTK.o \
	ScintillaGTK.o \
	ScintillaGTKAccessible.o

$(COMPLIB): $(SRC_OBJS) $(LEXLIB_OBJS) $(GTK_OBJS) $(MARSHALLER) $(LEX_OBJS)
	$(AR) $(ARFLAGS) ${.TARGET} ${.ALLSRC}
	$(RANLIB) ${.TARGET}

# Automatically generate header dependencies with "make deps"
include deps.mak
